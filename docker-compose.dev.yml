version: '3'
 
services:
  #  architecture services
   
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
 
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - redis_data:/data


  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      HTTP_USER: root
      HTTP_PASSWORD: root
    ports:
      - 8081:8081
 
  mongo:
    container_name: mongo
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/mongo
 
 
  #  schedulers
  parsers_scheduler:
    container_name: parsers_scheduler
    build: src/schedulers/parsers_scheduler
    depends_on:
      - redis
      - rabbitmq
      - mongo
 
 
  #  parsers
  yandex_b2c_parser:
    container_name: yandex_b2c_parser
    build: src/parsers/yandex_b2c_parser
    depends_on:
      - redis
      - rabbitmq
      - mongo
      - parsers_scheduler
      - telegram_api_service
    volumes:
      - data-storage:/data
 
  yandex_b2b_parser:
    container_name: yandex_b2b_parser
    build: src/parsers/yandex_b2b_parser
    restart: always
    depends_on:
      - redis
      - rabbitmq
      - mongo
      - parsers_scheduler
      - telegram_api_service
    volumes:
      - data-storage:/data
 
  citymobil_parser:
    container_name: citymobil_parser
    build: src/parsers/citymobil_parser
    restart: always
    depends_on:
      - redis
      - rabbitmq
      - mongo
      - parsers_scheduler
      - telegram_api_service
      - telegram_file_sender
      - telegram_log_sender
    volumes:
      - data-storage:/data
 
 
#  client services
  telegram_api_service:
    container_name: telegram_api_service
    build: src/telegram_services/telegram_api
    restart: always
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
    depends_on:
      - redis
      - rabbitmq
      - mongo
      - parsers_scheduler
 
  telegram_file_sender:
    container_name: telegram_file_sender
    build: src/telegram_services/telegram_file_sender
    restart: always
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
    depends_on:
      - redis
      - rabbitmq
      - mongo
      - parsers_scheduler
    volumes:
      - data-storage:/data

  telegram_log_sender:
    container_name: telegram_log_sender
    build: src/telegram_services/telegram_log_sender
    restart: always
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_ADMIN=${TG_ADMIN}
    depends_on:
      - redis
      - rabbitmq
      - mongo
      - parsers_scheduler

 
 
 
volumes:
  mongo_data:
  redis_data:
  data-storage: 